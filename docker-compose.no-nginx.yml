version: '3.8'

services:
  # MySQL Database
  mysql:
    image: mysql:8.0
    container_name: orangehrm_mysql
    restart: unless-stopped
    environment:
      MYSQL_ROOT_PASSWORD: ${MYSQL_ROOT_PASSWORD:-rootpassword123}
      MYSQL_DATABASE: ${MYSQL_DATABASE:-orangehrm_mysql}
      MYSQL_USER: ${MYSQL_USER:-orangehrm}
      MYSQL_PASSWORD: ${MYSQL_PASSWORD:-orangehrm123}
    volumes:
      - mysql_data:/var/lib/mysql
      - ./mysql/init:/docker-entrypoint-initdb.d
    ports:
      - "127.0.0.1:3306:3306"  # Only accessible from localhost
    networks:
      - orangehrm_network
    command: --default-authentication-plugin=mysql_native_password --character-set-server=utf8mb4 --collation-server=utf8mb4_unicode_ci
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-h", "localhost"]
      interval: 10s
      timeout: 5s
      retries: 5

  # OrangeHRM Application (exposed on port 8080 for your Nginx to proxy)
  orangehrm:
    build: .
    container_name: orangehrm_app
    restart: unless-stopped
    depends_on:
      mysql:
        condition: service_healthy
    environment:
      - DB_HOST=mysql
      - DB_PORT=3306
      - DB_NAME=${MYSQL_DATABASE:-orangehrm_mysql}
      - DB_USER=${MYSQL_USER:-orangehrm}
      - DB_PASSWORD=${MYSQL_PASSWORD:-orangehrm123}
    volumes:
      - orangehrm_data:/var/www/html
    ports:
      - "127.0.0.1:8080:80"  # Only accessible from localhost, proxy via your Nginx
    networks:
      - orangehrm_network

  # Redis for Session Storage (Optional)
  redis:
    image: redis:7-alpine
    container_name: orangehrm_redis
    restart: unless-stopped
    volumes:
      - redis_data:/data
    networks:
      - orangehrm_network
    command: redis-server --appendonly yes

volumes:
  mysql_data:
    driver: local
  orangehrm_data:
    driver: local
  redis_data:
    driver: local

networks:
  orangehrm_network:
    driver: bridge
