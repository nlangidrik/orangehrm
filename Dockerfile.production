FROM php:8.3-apache-bookworm

# Set environment variables
ENV OHRM_VERSION=5.7
ENV OHRM_MD5=5bd924a546e29e06c34eec73b014d139
ENV APACHE_DOCUMENT_ROOT=/var/www/html

# Install system dependencies
RUN set -ex; \
    savedAptMark="$(apt-mark showmanual)"; \
    apt-get update; \
    apt-get install -y --no-install-recommends \
        libfreetype6-dev \
        libjpeg-dev \
        libpng-dev \
        libzip-dev \
        libldap2-dev \
        libicu-dev \
        unzip \
        curl \
        git \
        supervisor \
        cron \
    ; \
    \
    # Configure PHP extensions
    docker-php-ext-configure gd --with-freetype --with-jpeg; \
    docker-php-ext-configure ldap \
        --with-libdir=lib/$(uname -m)-linux-gnu/; \
    \
    # Install PHP extensions
    docker-php-ext-install -j "$(nproc)" \
        gd \
        opcache \
        intl \
        pdo_mysql \
        zip \
        ldap \
        mysqli \
    ; \
    \
    # Clean up
    apt-mark auto '.*' > /dev/null; \
    apt-mark manual $savedAptMark; \
    ldd "$(php -r 'echo ini_get("extension_dir");')"/*.so \
        | awk '/=>/ { so = $(NF-1); if (index(so, "/usr/local/") == 1) { next }; gsub("^/(usr/)?", "", so); print so }' \
        | sort -u \
        | xargs -r dpkg-query -S \
        | cut -d: -f1 \
        | sort -u \
        | xargs -rt apt-mark manual; \
    apt-get purge -y --auto-remove -o APT::AutoRemove::RecommendsImportant=false; \
    rm -rf /var/cache/apt/archives; \
    rm -rf /var/lib/apt/lists/*

# Configure PHP
RUN mv "$PHP_INI_DIR/php.ini-production" "$PHP_INI_DIR/php.ini"

# Configure OPcache
RUN { \
        echo 'opcache.memory_consumption=128'; \
        echo 'opcache.interned_strings_buffer=8'; \
        echo 'opcache.max_accelerated_files=4000'; \
        echo 'opcache.revalidate_freq=60'; \
        echo 'opcache.fast_shutdown=1'; \
        echo 'opcache.enable_cli=1'; \
        echo 'opcache.enable=1'; \
        echo 'opcache.validate_timestamps=0'; \
    } > /usr/local/etc/php/conf.d/opcache-recommended.ini

# Configure PHP for production
RUN { \
        echo 'memory_limit=256M'; \
        echo 'max_execution_time=300'; \
        echo 'max_input_time=300'; \
        echo 'post_max_size=50M'; \
        echo 'upload_max_filesize=50M'; \
        echo 'max_file_uploads=20'; \
        echo 'date.timezone=UTC'; \
        echo 'session.gc_maxlifetime=3600'; \
        echo 'session.cookie_lifetime=0'; \
    } > /usr/local/etc/php/conf.d/orangehrm.ini

# Enable Apache modules
RUN a2enmod rewrite headers ssl

# Set document root
RUN sed -ri -e 's!/var/www/html!${APACHE_DOCUMENT_ROOT}!g' /etc/apache2/sites-available/*.conf
RUN sed -ri -e 's!/var/www/!${APACHE_DOCUMENT_ROOT}!g' /etc/apache2/apache2.conf /etc/apache2/conf-available/*.conf

# Create application directory
WORKDIR ${APACHE_DOCUMENT_ROOT}

# Copy application files
COPY . .

# Set proper permissions
RUN chown -R www-data:www-data ${APACHE_DOCUMENT_ROOT} && \
    chmod -R 755 ${APACHE_DOCUMENT_ROOT} && \
    chmod -R 775 src/cache src/log src/config && \
    chown -R www-data:www-data src/cache src/log src/config

# Install Composer dependencies
RUN if [ -f "src/composer.json" ]; then \
        cd src && \
        curl -sS https://getcomposer.org/installer | php -- --install-dir=/usr/local/bin --filename=composer && \
        composer install --no-dev --optimize-autoloader --no-interaction; \
    fi

# Create supervisor configuration
RUN mkdir -p /etc/supervisor/conf.d
COPY docker/supervisor/supervisord.conf /etc/supervisor/conf.d/supervisord.conf

# Create startup script
COPY docker/scripts/start.sh /usr/local/bin/start.sh
RUN chmod +x /usr/local/bin/start.sh

# Create health check script
COPY docker/scripts/healthcheck.sh /usr/local/bin/healthcheck.sh
RUN chmod +x /usr/local/bin/healthcheck.sh

# Expose port
EXPOSE 80

# Health check
HEALTHCHECK --interval=30s --timeout=10s --start-period=60s --retries=3 \
    CMD /usr/local/bin/healthcheck.sh

# Use supervisor to manage processes
CMD ["/usr/local/bin/start.sh"]
